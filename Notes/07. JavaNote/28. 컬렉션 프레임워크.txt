1. 자료 구조 (Data Structure)
    1) 대량의 데이터를 효율적으로 관리하는 매커니즘
        - 예) 우편번호, 학번, 주민번호
        - 예) 무작위 명단
            - 무작위로 나열된 명단에서 특정 사람을 찾는 것은 비효율적임

            => 학년, 반, 번호로 관리
                - 체계적인 학생 관리를 통해 2학년 2반 30번 이순신 찾는 경우
                - 효율적으로 찾을 수 있음

    2) 배열, 리스트, 스택, 큐, 트리 등
        - 배열
            - 크기가 고정되어 있어서 데이터를 추가하거나 삭제하는 제한이 있음
            - 새로이 배열을 만들고 옮겨야 함
        - 리스트
            - 원소가 원소를 가리켜서 관리하는 자료구조임
            - 데이터가 추가되거나 삭제될 때 연결하는 정보만 바꾸면 쉽게 추가, 삭제됨
        - 스택
            - 한쪽 끝에서만 자료를 넣거나 뺄 수 있는 선형구조(LIFO)로 되어있음
            - 자료를 넣는 것을 밀어넣는다하여서 푸시(push)라고 하고
            - 반대로 넣어둔 자료를 꺼내는 것을 팝(pop)이라고 함
            - 가장 최근에 푸시한 자료부터 나오게 됨
            - 오래된 데이터가 제일 아래에 있음
        - 큐
            - 먼저 집어놓은 데이터가 먼저 나오는 FIFO 구조로 저장하는 자료구조 
            - 지하철에 줄을 선 승객들의 행렬과 같은 것임
            - 제일 먼저 쌓인 데이터가 제일 먼저 출력됨
        - 트리
            - 부모 노드 밑에 여러 자식 노드가 연결되고, 자식 노드 각각에 다시 자식 노드가 연결되는 형태의 자료구조 
            - 자식 노드에서 부모 쪽으로 계속해서 타고 올라가다 보면 결국 부모가 없는 하나의 노드로 이어지게 됨(루트 노드)
            - 루트 노드를 중심으로 뻗어나가는 모습이 나무의 구조와 비슷함

2. 컬렉션 (Collection)
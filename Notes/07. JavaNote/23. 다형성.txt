1. Intro
    1) 객체지향 프로그래밍 대표적인 특징
        - 캡슐화, 상속, 다형성(Polymorphism)

    2) 다형성
        - 다양한 형태, 여러 형태를 뜻함
        - 보통 하나의 객체는 하나의 타입으로 고정되어 있음
        - 다형성을 사용하면 하나의 객체가 다른 타입으로 사용될 수 있음
        - 다형적 참조
            - 부모 타입의 변수가 자식 인스턴스 참조 
            - 부모는 자식을 담을 수 있음 (자식 타입까지 참조할 수 있음)
            
            - Parent parent = new Parent();
              Child child = new Chile();
                        ||
                        \/
              Parent poly = new Parent();       OR
              Parent poly = new Child();        OR
              Parent poly = new Grandson(); // Child의 하위인 손자가 있다면 가능

            - 자바에서 부모 타입은 자신은 물론이고, 자신을 기준으로 모든 자식 타입을 참조할 수 있음
                - 이것이 바로 다양한 형태를 참조할 수 있다고 해서 다형적 참조라 함 

2. 다형성(다형적 참조)의 한계
    1) 캐스팅
        - 업캐스팅 (upcasting) : 부모 타입으로 변경
        - 다운캐스팅 (downcasting) : 자식 타입으로 변경
    
    2) 일시적인 다운캐스팅

    3) 업캐스팅 
        - 다운 캐스팅과 반대로 현재 타입을 부모 타입으로 변경하는 것 

3. 다운 캐스팅과 주의점
    1) 다운 캐스팅은 잘못하면 심각한 런타임 오류가 발생할 수 있음
    